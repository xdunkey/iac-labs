# GitHub Actions workflow to build, test, and lint a Python project using Poetry
# For detailed docs, visit: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  setup-and-build:
    name: Setup and Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    defaults:
      run:
        shell: bash
        working-directory: ./example-app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.4

      - name: Install project dependencies
        run: poetry install --no-root

      - name: Cache virtual environment
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('poetry.lock') }}

  lint:
    name: Lint Codebase
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    needs: setup-and-build
    defaults:
      run:
        shell: bash
        working-directory: ./example-app

    steps:
      - name: Recover cached environment
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('poetry.lock') }}

      - name: Run linter
        run: poetry run task lint

  code-format:
    name: Code Formatter
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    needs: setup-and-build
    defaults:
      run:
        shell: bash
        working-directory: ./example-app

    steps:
      - name: Recover cached environment
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('poetry.lock') }}

      - name: Format code
        run: poetry run task formatter

  security-check:
    name: Security Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    needs: setup-and-build
    defaults:
      run:
        shell: bash
        working-directory: ./example-app

    steps:
      - name: Recover cached environment
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('poetry.lock') }}

      - name: Run security checks
        run: poetry run task security

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    needs: [lint, code-format, security-check]
    defaults:
      run:
        shell: bash
        working-directory: ./example-app

    steps:
      - name: Recover cached environment
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('poetry.lock') }}

      - name: Execute unit tests
        run: poetry run task test
